#Making the application to start on the port
spring.application.name=SpringBootSample
server.port=22021

server.compression.enabled=true
server.compression.mime-types=application/json,text/plain

############# MANAGEMENT HEALTH & SECURITY SETTINGS  ###########################

# change the port of the actuator endpoints in your server
#management.port=2017
# restrict to run only on localhost
# management.address=127.0.0.1
# change the context path for actuator
#management.context-path=/details
# enable or disable the endpoints.
#endpoints.health.enabled=true

##The following are the basic entries that are required to configure the security for your spring boot actuator application
#management.security.enabled=false
#security.basic.enabled=false
#security.user.name=admin
#security.user.password=admin

#Endpoint Info

# This endpoint helpful for displaying the details of the applications like application name, description, version, etc.
# By default, the endpoint can be accessed using /info
# The default value for sensitive is false. There is no harm in exposing this details as that is common details 
# that has to be exposed to others
#endpoints.info.id=info
#endpoints.info.sensitive=false
#endpoints.info.enabled=true
#info.app.name=Spring Actuator Example
#info.app.description=Spring Actuator(OTDR MICROSERVICE)
#info.app.version=1.0

##Output for Endpoint Info
#{
#   "app": {
#     "version": "0.0.1-SNAPSHOT",
#     "description": "Spring Actuator Working Examples",
#     "name": "Spring Actuator Example"
#   }
#}


#Endpoint Health
#endpoints.health.id=health
#endpoints.health.sensitive=true
#endpoints.health.enabled=true

#EndPoint Output
#{
#  "status": "DOWN",
#  "customHealthCheck": {
#    "status": "DOWN",
#    "Error Code": 0
#  },
#  "diskSpace": {
#    "status": "UP",
#    "free": 195979440128,
#    "threshold": 10485760
#  }
#}

#Endpoint Metrics

#By default this endpoint is enabled under the HTTP URL /metrics.
#This endpoint used for collecting the details of applications performance like memory, processors, up time, heap size, 
#classes loaded, garbage collection, http sessions, etc.
#The example configuration for this endpoint is:

#endpoints.metrics.id=metrics
#endpoints.metrics.sensitive=true
#endpoints.metrics.enabled=true




